apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubezephyr-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: kubezephyr
---
apiVersion: v1
kind: Secret
metadata:
  name: kubezephyr-backend-secret
  namespace: kubezephyr
type: Opaque
data:
  secret_key: MTIzNDU2
  mongo_password: amkzMms3YXU0YTgz
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubezephyr-backend-config
  namespace: kubezephyr
data:
  mongo_host: "mongo-in-cluster.mongo"
  mongo_port: "27017"
  mongo_user: zephyr
  mongo_db: KubeZephyr
  k8s_client_in_cluster: "True"
  k8s_ceph_namespace: "rook-ceph"
  k8s_cephblockpool_name: "kubezephyr-blockpool"
---
apiVersion: v1
kind: Pod
metadata:
  name: kubezephyr-backend
  namespace: kubezephyr
  labels:
    app: kubezephyr-backend
spec:
  nodeSelector:
    kubernetes.io/hostname: zephyr-lab4
  containers:
  - name: kubezephyr-backend
    image: zephyrxvxx7/kubezephyr_backend
    resources:
      limits:
        memory: "512Mi"
        cpu: "500m"
    ports:
      - containerPort: 1234
    env:
      - name: SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: kubezephyr-backend-secret
            key: secret_key
      - name: MONGO_HOST
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: mongo_host
      - name: MONGO_PORT
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: mongo_port
      - name: MONGO_USER
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: mongo_user
      - name: MONGO_PASSWORD
        valueFrom:
          secretKeyRef:
            name: kubezephyr-backend-secret
            key: mongo_password
      - name: MONGO_DB
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: mongo_db
      - name: K8S_CLIENT_IN_CLUSTER
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: k8s_client_in_cluster
      - name: K8S_CEPH_NAMESPACE
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: k8s_ceph_namespace
      - name: K8S_CEPHBLOCKPOOL_NAME
        valueFrom:
          configMapKeyRef:
            name: kubezephyr-backend-config
            key: k8s_cephblockpool_name
---
apiVersion: v1
kind: Service
metadata:
  name: kubezephyr-backend
  namespace: kubezephyr
spec:
  selector:
    app: kubezephyr-backend
  ports:
  - port: 1234
    targetPort: 1234
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubezephyr-backend-ingress
  namespace: kubezephyr
  annotations:
    # Ingress Controller
    kubernetes.io/ingress.class: nginx
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    # cert-manager
    cert-manager.io/cluster-issuer: letsencrypt
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.zephyr-kubernetes.tech
    secretName: kubezephyr-backend-tls
  rules:
  - host: api.zephyr-kubernetes.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kubezephyr-backend
            port:
              number: 1234

